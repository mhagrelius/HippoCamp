name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:
    types: [checks_requested]

permissions:
  contents: read
  pull-requests: read

jobs:
  commitlint:
    name: Validate Conventional Commits
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Lint Commit Messages
      uses: wagoid/commitlint-github-action@v6
      with:
        configFile: commitlint.config.mjs
        failOnWarnings: false
        failOnErrors: true

  git-flow-validation:
    name: Validate Git-Flow Rules
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Check Branch Strategy Compliance
      run: |
        echo "üîç Validating Git-Flow compliance..."
        echo "Source branch: ${{ github.head_ref }}"
        echo "Target branch: ${{ github.base_ref }}"
        
        # Validate Git-flow branch targeting patterns
        echo "üîç Source: ${{ github.head_ref }} ‚Üí Target: ${{ github.base_ref }}"
        
        if [[ "${{ github.base_ref }}" == "main" ]]; then
          # PRs to main: only from develop (releases) or hotfix/* (emergencies)
          if [[ "${{ github.head_ref }}" == "develop" ]]; then
            echo "‚úÖ Release PR from develop to main - allowed"
          elif [[ "${{ github.head_ref }}" =~ ^hotfix/.+ ]]; then
            echo "‚úÖ Emergency hotfix PR to main - allowed"
          elif [[ "${{ github.head_ref }}" =~ ^release/.+ ]]; then
            echo "‚úÖ Release branch PR to main - allowed"
          else
            echo "‚ùå Invalid PR to main!"
            echo "üí° Only allowed: develop (releases), hotfix/* (emergencies), release/* (release prep)"
            exit 1
          fi
        elif [[ "${{ github.base_ref }}" == "develop" ]]; then
          # PRs to develop: only from feature/* 
          if [[ "${{ github.head_ref }}" =~ ^feature/.+ ]]; then
            echo "‚úÖ Feature branch targeting develop - allowed"
          elif [[ "${{ github.head_ref }}" =~ ^release/.+ ]]; then
            echo "‚úÖ Release branch back-merge to develop - allowed"
          elif [[ "${{ github.head_ref }}" =~ ^hotfix/.+ ]]; then
            echo "‚úÖ Hotfix back-merge to develop - allowed"
          else
            echo "‚ùå Invalid branch name for develop target!"
            echo "üí° Use 'feature/#{issue}-description' for features"
            echo "üìã Invalid branch: ${{ github.head_ref }}"
            exit 1
          fi
        fi
        
        echo "‚úÖ Git-flow branch strategy is valid"

  forbid-merge-commits:
    name: Forbid Merge Commits in PRs
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_ref != 'main'
    steps:
    - name: Forbid merge commits
      uses: motlin/forbid-merge-commits-action@main

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
      
    - name: Run tests
      run: dotnet test --no-build --configuration Release --verbosity normal
